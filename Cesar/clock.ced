org h7f00
stack:
relogio:	dw	0
teclado:	dw	0
exit:		db	0

org	hff80
	daw	[31]
ivet:	dw	0

time:	dab	[8]

	dab	[15]
timdt:	db	0
ints:	db	0
inte:	db	0
tecst:	db	0
tecdt:	db	0
visor:	dab	[36]

org 0

mov #stack, r6
mov #250, timdt
mov #Clock, h7f00
mov #Keyboard, h7f02
jmp h8000
hlt



Clock:
	mov #ClkInterruption, ivet	;Clock func interruptions
	mov #'0', r1


	mov #8, r3

	inittime:
		mov r1, time(r3)
		dec r3
		cmp r3, #-1
		bne	inittime

	mov #2, r3
	mov #':', time(r3)
	mov #5, r3
	mov #':', time(r3)

	clr r2	;char
	clr r3	;cursor
	clr r4	;timer delta seconds counter

		
	jsr	r7, PrintClock
	
	
	clr exit
	mov	#h83, inte
	loop:
		cmp exit, #0
		beq loop

	rts r7

	
PrintClock:
	clr r3
	prtclk_loop:
		mov time(r3), -(r6)
		jsr r7, Print
		add #2, r6
		cmp r3, #8
		bne prtclk_loop
	rts r7

	


Print:
	mov r1, -(r6)
	mov 4(r6), r1
	mov r1, visor(r3)
	inc r3
	mov (r6)+, r1
	rts r7

FormatClock:
	mov #7, r3
	FormatClock_loop:
		cmp r3, #0
		blt FormatClock_ret

		cmp r3, #2
		beq Dec_r3
		cmp r3, #5
		beq Dec_r3


		cmp r3, #7
		beq inc_decimal
		cmp r3, #4
		beq inc_decimal
		cmp r3, #1
		beq inc_decimal

		cmp time(r3), #'6'
		blt Dec_r3
		mov #'0', time(r3)
		dec r3
		dec r3
		cmp r3, #0
		blt reinc_r3twice
		add #1, time(r3)
		reinc_r3twice:
			inc r3
			inc r3
		br Dec_r3

		inc_decimal:
			cmp time(r3), #'9'
			ble Dec_r3
			mov #'0', time(r3)
			dec r3
			cmp r3, #0
			blt reinc_r3
			add #1, time(r3)
			reinc_r3:
				inc r3
		Dec_r3:
			dec r3
			br FormatClock_Loop
	FormatClock_ret:
		rts r7
		

ClkInterruption:
	cmp ints, #h82	;Keyboard
	beq clkint_keyboard

	clkint_clock:
		inc r4
		cmp r4, #4
		bne clkint_return
		clr r4

		mov #7, r3
		add #1, time(r3)
		br clkint_return

	clkint_keyboard:
		jsr r7, ToLowerCase
		cmp tecdt, #h0d	;cr
		beq finish
		cmp tecdt,#'h'
		beq inchours
		cmp tecdt, #'m'
		beq incminutes
		cmp tecdt, #'z'
		bne clkint_return
		jsr r7, ClearClock
		br clkint_return
		inchours:
			mov #1, r3
			add #1, time(r3)
			br clkint_return
		incminutes:
			mov #4, r3
			add #1, time(r3)
			br clkint_return
		finish:
			mov #hff exit

	clkint_return:
	jsr r7, FormatClock
	jsr r7, PrintClock
	clr tecst
	clr ints
	rti

ToLowerCase:
	mov r1, -(r6)
	mov tecdt, r1
	
	cmp r1, #91
	bge tolower_ret
	cmp r1, #65
	blt tolower_ret
	
	add #32, tecdt

	tolower_ret:
		mov (r6)+, r1
		rts r7
	

ClearClock:
	mov r1, -(r6)
	mov #'0', r1
	mov #7, r3
	clearclock_loop:
		tst r3
		blt clearclock_ret
		cmp time(r3), #':'
		beq clearclock_decr3
		mov r1, time(r3)
		clearclock_decr3:
			dec r3
		br clearclock_loop

	clearclock_ret:
		mov (r6)+, r1
		rts, r7
	


Keyboard:
	
	mov #'b', visor(r1)
	rts r7




org h8000

mov #0, r0
jsr r7, (h7f00(r0))
mov #2, r0
jsr r7, (h7f00(r0))
hlt

