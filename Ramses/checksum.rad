	org 207
	
	ptvchar:db 0	;stores the value of vchar
	n:	db 0	;Number of operations
	xsum:	db 0	;Checksum result
	vchar:	db 212	;Address of the first byte of VCHAR
	vbits:	db 252	;Address of the first byte of VBITS ;40 bytes away from vchar


	org 0

Init:	
	ldr a, #0	;Initialize registers and variables
	ldr b, #0
	ldr x, #0
	str a, xsum
	str a, n
	ldr a, vchar
	str a, ptvchar

Loop:
	ldr a, vchar, i
	jz Checksum

	ldr b, vbits, i
	sub x, #8	;x it's used for testing if vbits are over and change for the next byte
	jz ChangeByte
	add x, #9	;add x 8 + 1
		
	shr b
	str b, vbits, i
	jc ToUpper
	jmp ToLower

UpdateVchar:
	ldr a, vchar	;updates the address of the first byte
	add a, #1
	str a, vchar
	jmp Loop

ChangeByte:
	add x, #9	;add x 8 + 1
	ldr a, vbits
	add a, #1
	str a, vbits
	jmp Loop


ToUpper:
	sub a, #123
	jn Upper	;test if ascii code its < 122
	jmp UpdateVchar
Upper:
	add a, #26	;test if ascii code its < 97
	jn UpdateVchar	


	add a, #65	;make upper case subtracting 32 (-123+26+65 = -32)
	str a, vchar, i

	ldr a, n
	add a, #1
	str a, n

	jmp UpdateVchar
	
ToLower:
	sub a, #91	;test if ascii code its < 91
	jn lower
	jmp UpdateVchar
lower:
	add a, #26	;test if ascii code its >= 65
	jn UpdateVchar
	
	add a, #97	;make lower case adding 32 (-91+26+97 = 32)
	str a, vchar, i
	
	ldr a, n
	add a, #1
	str a, n
	jmp UpdateVchar

Checksum:
	
	ldr a, ptvchar
	str a, vchar

Sum:
	ldr b, vchar, i
	jz End
	add b, xsum
	str b, xsum
	add a #1
	str a, vchar
	jmp Sum
End:
	hlt
	